#!/usr/local/anaconda3/bin/python

def monomorphize_source(src, primitive):
    monomorpized_src = src.replace('Dyn_T_', f'Dyn{primitive.capitalize()}')
    monomorpized_src = monomorpized_src.replace(tmp, '', 1)
    monomorpized_src = monomorpized_src.replace('_T_', primitive)
    return monomorpized_src

def monomporphize_tests(tests, primitive):
    monomorphized_t = tests.replace('import { Dyn_T_, _T_ } from "../src/core/Dyn_T_.sol";', f'import {{ Dyn{primitive.capitalize()} }} from "../src/Dyn{primitive.capitalize()}.sol";', 1)
    monomorphized_t = monomorphized_t.replace('Dyn_T_', f'Dyn{primitive.capitalize()}')
    monomorphized_t = monomorphized_t.replace('_T_', f'{primitive}')
    return monomorphized_t

def main():
    source = ''
    with open('src/core/Dyn_T_.sol', 'r') as f:
        source = f.read()

    tests = ''
    with open('test/Dyn_T_.t.sol', 'r') as f:
        tests = f.read()

    for primitive in primitive_types:
        with open(f'src/Dyn{primitive.capitalize()}.sol', 'w') as f:
            f.write(monomorphize_source(source, primitive))
        with open(f'test/Dyn{primitive.capitalize()}.t.sol', 'w') as f:
            f.write(monomporphize_tests(tests, primitive))

primitive_types = [
    'bool',
    'uint8',
    'uint16',
    'uint24',
    'uint32',
    'uint40',
    'uint48',
    'uint56',
    'uint64',
    'uint72',
    'uint80',
    'uint88',
    'uint96',
    'uint104',
    'uint112',
    'uint120',
    'uint128',
    'uint136',
    'uint144',
    'uint152',
    'uint160',
    'uint168',
    'uint176',
    'uint184',
    'uint192',
    'uint200',
    'uint208',
    'uint216',
    'uint224',
    'uint232',
    'uint240',
    'uint248',
    'uint256',
    'int8',
    'int16',
    'int24',
    'int32',
    'int40',
    'int48',
    'int56',
    'int64',
    'int72',
    'int80',
    'int88',
    'int96',
    'int104',
    'int112',
    'int120',
    'int128',
    'int136',
    'int144',
    'int152',
    'int160',
    'int168',
    'int176',
    'int184',
    'int192',
    'int200',
    'int208',
    'int216',
    'int224',
    'int232',
    'int240',
    'int248',
    'int256',
    'bytes1',
    'bytes2',
    'bytes3',
    'bytes4',
    'bytes5',
    'bytes6',
    'bytes7',
    'bytes8',
    'bytes9',
    'bytes10',
    'bytes11',
    'bytes12',
    'bytes13',
    'bytes14',
    'bytes15',
    'bytes16',
    'bytes17',
    'bytes18',
    'bytes19',
    'bytes20',
    'bytes21',
    'bytes22',
    'bytes23',
    'bytes24',
    'bytes25',
    'bytes26',
    'bytes27',
    'bytes28',
    'bytes29',
    'bytes30',
    'bytes31',
    'bytes32',
    'address',
]

tmp = '''
type _T_ is uint256;

using {eq_T_ as ==, neq_T_ as !=} for _T_ global;

function eq_T_(_T_ lhs, _T_ rhs) pure returns (bool res) {
    assembly ("memory-safe") {
        res := eq(lhs, rhs)
    }
}

function neq_T_(_T_ lhs, _T_ rhs) pure returns (bool) {
    return !(lhs == rhs);
}
'''

if __name__ == '__main__':
    main()
